{"name": "test_login[args1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidElementStateException: Message: Cannot set the element to '15301090243 '. Did you interact with the correct element?", "trace": "self = <test_login.Test_Login object at 0x000002079D7D2288>, args = {'password': 'wanglun001WXL  ', 'username': '15301090243 '}\n\n    @allure.step(title='测试登录界面')\n    @pytest.mark.parametrize(\"args\", data_with_key(\"test_login\"))\n    def test_login(self, args):\n        username = args['username']\n        password = args['password']\n        self.loginpage.jump_login_page()\n    \n        self.loginpage.login_qq()\n    \n        self.loginpage.click_password_login()\n        time.sleep(2)\n    \n        allure.attach('输入用户名')\n>       self.loginpage.send_phone(username)\n\nscripts\\test_login.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\login_page.py:35: in send_phone\n    self.input_text(self.phone_number, text)\nbase\\base_action.py:14: in input_text\n    self.find_element(loc).send_keys(text)\n..\\..\\python\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:479: in send_keys\n    'value': keys_to_typing(value)})\n..\\..\\python\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:633: in _execute\n    return self._parent.execute(command, params)\n..\\..\\python\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n..\\..\\python\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:29: in check_response\n    raise wde\n..\\..\\python\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:24: in check_response\n    super(MobileErrorHandler, self).check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000002079DBDE9C8>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid element state\",\"message\":\"Cannot set the element to \\'15301090243...ctory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\\\\n\\\\tat java.lang.Thread.run(Thread.java:818)\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidElementStateException: Message: Cannot set the element to '15301090243 '. Did you interact with the correct element?\n\n..\\..\\python\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: InvalidElementStateException"}, "steps": [{"name": "测试登录界面", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidElementStateException: Message: Cannot set the element to '15301090243 '. Did you interact with the correct element?\n\n", "trace": "  File \"d:\\learn\\python\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"D:\\learn\\ceshi\\aaa\\scripts\\test_login.py\", line 38, in test_login\n    self.loginpage.send_phone(username)\n  File \"D:\\learn\\ceshi\\aaa\\page\\login_page.py\", line 35, in send_phone\n    self.input_text(self.phone_number, text)\n  File \"D:\\learn\\ceshi\\aaa\\base\\base_action.py\", line 14, in input_text\n    self.find_element(loc).send_keys(text)\n  File \"d:\\learn\\python\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 479, in send_keys\n    'value': keys_to_typing(value)})\n  File \"d:\\learn\\python\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"d:\\learn\\python\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\learn\\python\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 29, in check_response\n    raise wde\n  File \"d:\\learn\\python\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 24, in check_response\n    super(MobileErrorHandler, self).check_response(response)\n  File \"d:\\learn\\python\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "attachments": [{"source": "daa1d5f2-e9bf-4838-8ad7-ede19a12b72c-attachment.attach"}], "parameters": [{"name": "args", "value": "{'username': '15301090243 ', 'password': 'wanglun001WXL  '}"}], "start": 1585558383841, "stop": 1585558391638}], "parameters": [{"name": "args", "value": "{'username': '15301090243 ', 'password': 'wanglun001WXL  '}"}], "start": 1585558383841, "stop": 1585558391666, "uuid": "fa2c9bec-b240-41e1-8337-83debb4f174e", "historyId": "1d661b22c94c0b185b7529d957efe2ef", "testCaseId": "563c2db547dfc109d0a38008e4466f3c", "fullName": "scripts.test_login.Test_Login#test_login", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "DESKTOP-TLBM0JV"}, {"name": "thread", "value": "9328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_login"}]}